{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Status/Status.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","good","neutral","bad","onLeaveFeedback","type","onClick","Status","total","positiveFeedback","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","prev","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAU,WAAnB,UACE,6BAAMF,IACLC,K,MCJQ,SAASE,EAAT,GAAiE,EAAtCC,KAAsC,EAAhCC,QAAgC,EAAvBC,IAAwB,IAAnBC,EAAkB,EAAlBA,gBAC5D,OACE,qCACA,wBACAC,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAMF,EAAgB,SAH/B,kBAOA,wBACAC,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAMF,EAAgB,YAH/B,qBAOA,wBACAC,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAMF,EAAgB,QAH/B,oB,MCjBW,SAASG,EAAT,GAAkE,IAAhDN,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKK,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBACxD,OACI,sBAAKV,UAAU,WAAf,UACI,sCAAQ,sBAAMA,UAAU,OAAhB,SAAwBE,OAChC,yCAAW,sBAAMF,UAAU,OAAhB,SAAwBG,OACnC,qCAAO,sBAAMH,UAAU,OAAhB,SAAwBI,OAC/B,uCAAS,sBAAMJ,UAAU,OAAhB,SAAwBS,OACjC,mDAAqB,sBAAMT,UAAU,OAAhB,SAAwBU,UCR1C,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGZ,UAAU,WAAb,SAAyBY,ICGnB,SAASC,IACtB,MAAwBC,mBAAS,MAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,MAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,MAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAiBMC,EAAqB,WACzB,OAAOhB,EAAOC,EAAUC,GAS1B,OACI,qCACA,cAAC,EAAD,CAASN,MAAM,wBAAf,SACA,cAAC,EAAD,CAAiBO,gBA5BC,SAACc,GACrB,OAAQA,GACN,IAAK,OACHJ,GAAQ,SAAAK,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHH,GAAO,SAAAG,GAAI,OAAIA,EAAO,KACtB,MACF,QAAS,aAmBT,cAAC,EAAD,CAAStB,MAAM,eACdoB,IACC,cAAC,EAAD,CACAhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLK,MAAOS,IACPR,iBAjBY,IAATR,EACL,IACAmB,KAAKC,MAAc,IAAPpB,EAAcgB,KAAwB,MAkB9C,cAACP,EAAD,CAAcC,QAAQ,yBC5ChCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAACZ,EAAD,MAEAa,SAASC,eAAe,W","file":"static/js/main.c293fadc.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\r\nimport './Section.css'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className=\"contaner\">\r\n      <h1 >{title}</h1>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.any,\r\n}","import PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css'\r\n\r\nexport default function FeedbackOptions({ good, neutral, bad, onLeaveFeedback}) {\r\n  return (\r\n    <>\r\n    <button\r\n    type=\"button\"\r\n    className=\"button\"\r\n    onClick={() => onLeaveFeedback(\"good\")}\r\n    >\r\n    Good\r\n    </button>\r\n    <button\r\n    type=\"button\"\r\n    className=\"button\"\r\n    onClick={() => onLeaveFeedback(\"neutral\")}\r\n    >\r\n    Neutral\r\n    </button>\r\n    <button\r\n    type=\"button\"\r\n    className=\"button\"\r\n    onClick={() => onLeaveFeedback(\"bad\")}\r\n    >\r\n    Bad\r\n    </button>\r\n    </>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func\r\n};","import PropTypes from 'prop-types';\r\nimport './Status.css'\r\n\r\nexport default function Status({ good, neutral, bad, total, positiveFeedback }) {\r\n    return (\r\n        <div className=\"contaner\">\r\n            <p>Good:<span className=\"span\">{good}</span></p>\r\n            <p>Neutral:<span className=\"span\">{neutral}</span></p>\r\n            <p>Bad:<span className=\"span\">{bad}</span></p>\r\n            <p>Total:<span className=\"span\">{total}</span></p>\r\n            <p>Positive feedback:<span className=\"span\">{positiveFeedback}</span></p>\r\n        </div>\r\n  )\r\n}\r\n  \r\nStatus.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positiveFeedback: PropTypes.string\r\n}","import PropTypes from 'prop-types'\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className=\"contaner\">{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n}","import {useState} from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Status from './components/Status/Status';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(null);\n  const [neutral, setNeutral] = useState(null);\n  const [bad, setBad] = useState(null);\n\n  const leaveFeedback = (e) => {\n    switch (e) {\n      case 'good':\n        setGood(prev => prev + 1)\n        break\n      case 'neutral':\n        setNeutral(prev => prev + 1)\n        break\n      case 'bad':\n        setBad(prev => prev + 1)\n        break\n      default: return\n    }\n  }\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad  \n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    return good === 0\n    ? \"0\"\n    : Math.round((good * 100) / countTotalFeedback()) + \"%\";\n  }\n    \n  return (\n      <>\n      <Section title=\"Please leave feedback\">\n      <FeedbackOptions onLeaveFeedback={leaveFeedback} />\n      </Section>\n      <Section title=\"Statistics\" />\n      {countTotalFeedback() ? (\n        <Status\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positiveFeedback={countPositiveFeedbackPercentage()}\n        />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n          )}\n      </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}